1. 프로세스와 쓰레드의 차이점은?
-프로세스는 운영체제로부터 자원을 할당받는 작업의 단위고, 쓰레드는 할당받은 자원을 이용하는 실행의 단위이며 프로세스내에 여러개의 쓰레드가 생길 수 있다. 프로그램하나가 프로세스이며 그 안에서 처리하는 것이 쓰레드가 되는 것이다.
-프로세스와 쓰레드는 여러개를 생성할 수 있다. 이것을 멀티 프로세스와 멀티쓰레드라고 한다. 하지만 멀티프로세스는 하나의 프로세스가 잘못 되어도 프로그램이 실행은 되지만 컨텍스트 스위칭이라는 비용이 더 발생한다. 반면 멀티쓰레드는 시스템의 자원소모나 처리비용이 감소한다는 장점이 있는 반면 디버깅이나 동기화 문제가 발생한다는 단점을 가지고 있다.

2. 쓰레드에서 동기화란 무엇인가?
-여러개의 쓰레드가 한개의 자원을 사용하고자 할 때 해당 쓰레드외에는 접근을 막는 것이다. synchronized는 단 하나의 스레드만 실행할 수 있도록 하는 메소드 또는 블록을 뜻한다. 그러나 남발할 경우 성능이 저하되므로 제한적으로 사용할 필요가 있다.

3.html 에서  display 종류와 속성에 대하여 설명하시오.
-display는 display 속성은 웹 페이지의 레이아웃(layout)을 결정하는 CSS의 중요한 속성 중 하나이다. 기본적으로 인라인과 블록속성 중 하나의 값을 가진다. 
-block:언제나 새로운 라인에서 시작하며, 해당라인의 모든 너비를 차지한다.
-inline:새로운 라인에서 시작하지 않는다. 또한 가진 너비도 해당 라인 전체가 아닌 해당 요소의 내용물만큼만 차지한다.
-inline-block:  해당 속성값이 인라인 블록으로 지정되면 해당 요소자체는 인라인 요소처럼 동작하지만 내부에서는 블록요소처럼 동작한다. 인라인 요소와 비슷하지만 너비와 높이를 설정할 수 있으며 블록요소처럼 margin을 이용하여 여백을 지정할 수도 있다.
-visibility:visibility는 해당 용소가 웹페이지에 표현될지 아닐지만 결정한다.
-opacity: 해당 요소의 투명도를 조절할 수 있다. 1이 최대로 0에 가까울수록 투명해진다.
4.px 과 em의 차이는? (font)
-px은 픽셀단위이며 em은 배수 단위이다. em은 해당 글꼴의 기본크기를 1em으로 놓고 그에대한 상대적인 크기를 설정하는 것이다. px은 스크린의 픽셀을 기준으로 하는 절대적인 크기이다.

5. inline-block 태그의 종류는?
-<button>,<input>,<select> 태그들이 대표적으로 인라인블록태그로 설정할 수 있는 태그이다.

6. display:none; 과 visibility:hidden;의 차이는?
-display:none은 아예 가지고 있는 내용물자체가 웹사이트에 나타나지 않게 하는 것이며, visibility:hidden;의 경우 자기 속성값을 지키지만 눈에 보이지만 않게 되는 것이다.

7.HashMap<Integer, String> map = new HashMap<>();
   map.put(45, "Brown");
   map.put(37, "James");
   map.put(23, "Martin");

======================================
위의 Value 값이 다나오도록 for 문 돌리시오.
>
Set<Integer> key = map.keySet();
		
for (Integer i : key) {
	System.out.print(map.get(i)+'\t');
}
8.로또 번호6개를 출력 -중복없이
Set 으로 구현 과
일반 for 문 구현을 따로 하시오.

Set구현
>
public static void main(String[] args) {
	final int LOTTO_NUM=6;
	Set<Integer> lotto = new TreeSet<>();
		
	for(int i=0; i<LOTTO_NUM;i++) {
		lotto.add((int)(Math.random()*45+1));
	}
	System.out.println(lotto.toString()+"\t");
}

일반for문 구현
>
public static void main(String[] args) {
	int[] lotto = new int[6];

	for (int i = 0; i < lotto.length; i++) {
		lotto[i] = (int) (Math.random() * 45 + 1);
		for (int j = 0; j < i; j++) {
			if (i == j)
				i--;
		}
	}
	for (int i = 0; i < lotto.length; i++) {
		System.out.print(lotto[i] + "\t");
	}

}


9.아래가 돌아 가도록 구현하시오.

    main(){
        ThreadCount threadCount = new ThreadCount();
                threadCount.start();
                
                String input = JOptionPane.showInputDialog("아무 값이나 입력하세요."); 
                System.out.println("입력하신 값은 " + input + "입니다.");
}
===========================================

10 9 8 7 6 ... 이 1초마다 실행 되도록 쓰레드를 완성하시오.

>
import javax.swing.JOptionPane;

class ThreadCount extends Thread {
	public void run() {
		for (int i = 10; i > 0; i--) {
			System.out.println(i);
			try {
				Thread.sleep(1000);// 1초마다 실행시킴
			} catch (Exception e) {

			}
		}
	}
}