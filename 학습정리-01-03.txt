1. jS - 가위 바위 보 3개의 버튼을 작성후 해당 버튼을 누르면 이미지가 바뀌게 하시오

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script>
       $(document).ready(function(){

        $("#btnR").click(function(){
            $("#main").attr("src","img/rock.png");
        });
        $("#btnS").click(function(){
            $("#main").attr("src","img/sissor.png");
        });
        $("#btnP").click(function(){
            $("#main").attr("src","img/paper.png");
        });

       });
          


    </script>
</head>
<body>
   <div class="container text-center mt-5">
<h1 class="mb-5">가위바위보시간입니다</h1>
       <div>
       <img id="main" src="img/paper.png"/>
    </div>
    <div class="d-flex justify-content-between mt-5 ">
   <button class="btn btn-primary"  id="btnR">바위!</button>
   <button class="btn btn-primary" id="btnS">가위!</button>
   <button class="btn btn-primary" id="btnP">보!</button>
</div>
</div>
</body>
</html>
2. 스프링 시큐티 설정을 위한 pom.xml 과 web.xml 및 가장 기본적인
security-context.xml 설정은?

pom.xml>
<java-version>1.8</java-version>
<org.springframework-version>5.0.7.RELEASE</org.springframework-version>
<org.aspectj-version>1.6.10</org.aspectj-version>
<org.slf4j-version>1.6.6</org.slf4j-version>
<org.security-version>5.0.6.RELEASE</org.security-version>
</properties>
<!--버전 체크하기-->

<dependency>
<groupId>org.springframework.security</groupId>
<artifactId>spring-security-core</artifactId>
<version>${org.security-version}</version>
</dependency>

<dependency>
<groupId>org.springframework.security</groupId>
<artifactId>spring-security-web</artifactId>
<version>${org.security-version}</version>
</dependency>

<dependency>
<groupId>org.springframework.security</groupId>
<artifactId>spring-security-config</artifactId>
<version>${org.security-version}</version>
</dependency>

<dependency>
<groupId>org.springframework.security</groupId>
<artifactId>spring-security-taglibs</artifactId>
<version>${org.security-version}</version>
</dependency>

web.xml>
<!-- Spring Security Filter -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
 	<!-- 12종 필터를 만들어 준다 -->
    <filter-mapping>
          <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

security-context.xml>
<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	
	<http>
		<intercept-url pattern="/security/all" access="permitAll" />
		<intercept-url pattern="/security/member" access="hasRole('ROLE_MEMBER')" />
		<form-login/>
	</http>
	
	<authentication-manager>
	<authentication-provider>
<user-service>
<user name="member" password="{noop}member" authorities="ROLE_MEMBER" />
<user name="mananger" password="{noop}mananger" authorities="ROLE_MEMBER" />
</user-service>
</authentication-provider>
	</authentication-manager>

</beans:beans>

3. 인증과 권한에 대하여 설명하시오.
인증(Authentication)이란?
> 해당 사용자가 본인이 맞는지 확인하는 장치이다. (ex>로그인)
권한(Authirization)이란?
>인증된 사용자가 요청된 자원에 접근 가능한지를 결정하는 것이다.

결론적으로 말하자면 관계자외 출입금지 같은 느낌?
먼저 해당 문에 들어갈 사람이 누구인지 확인해서 관계자면 그 문에 들어갈 수 있고 아니라면 그 문에 들어가지 못하도록 걸러내는 것이며, 이것이 스프링 시큐리티의 보안이라고 할 수 있다.

 









