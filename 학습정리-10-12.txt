1. 변수의 스코프에 대하여 설명하시오.
>스코프는 영역이라는 말이다.
 변수의 스코프는 변수에 대한 접근과 변수가 존재할 수 있는 영역을 말한다. 이를테면 {}로 한 영역이 생성되고 그 영역안에서만 변수선언이 가능하기 때문에 {}가 다른 함수에 같은 이름의 변수 선언이 이루어져도 다른 영역에 있기 때문에 가능하다.
2.지역변수란?
> 지역변수란 함수{}안에 선언된 변수들을 말한다.
3.인스턴스 변수란?
>인스턴스 변수는 함수가 아닌 class내에 선언된 변수이다.

4. 아래의 함수를 펙토리얼로 표현하시오.
System.out.println("3 factorial: " + factorial(3));
System.out.println("3 factorial: " + factorial(12));
>
	public static void main(String[] args) {
		
		System.out.println("3 factorial: " + factorial(3));
		System.out.println("3 factorial: " + factorial(12));
		
	}
	public static int factorial(int i){
		if(i==0) 
			return 1;
		else 
			return i*factorial(i-1);
	}
5.클래스의 구성요소는?
-인스턴스 변수:클래스 내에 선언된 변수
-인스턴스 메소드:클래스 내에 정의된 메소드(함수)

6.원의 넓이는 구하는 프로그램을 아래와 같이 작성하시오.
  - 원클래스를 만들것
    - 변수 radius
    - 변수 radius에 대한 setter getter 함수 만들것
    - getArea 함수
  
  -메인 메소드를 가진 다른 클래스(AreaTest)에서 원 객체를 생성할것

>
class Circle {
	int radius;

	public void setRadius(int r) {
		radius = r;
	}

	public int getRadius() {
		return radius;
	}

	public double getArea() {
		return radius * radius * Math.PI;
	}

}

public class AreaTest {

	public static void main(String[] args) {
		Circle circle;
		circle = new Circle();
		circle.setRadius( );

		int radius = circle.getRadius();
		System.out.println(radius);
		System.out.println(circle.getRadius());

		double area = circle.getArea();
		System.out.println(area);
	}

}


7. 객체에 대하여 설명하시오.
>객체란 실제로 존재하는 것이다.  클래스에 의해 생성도니 것을 객체라고 할 수 있다.

8. 아래의 클래스에 대하여, 메모리 그림을 그리시오.
class Rectangle{
	int width;
	int height;
	
	public int getArea() {
		return width * height;
	}
	
	public int getWidth() {
		return width;
	}
	public void setWidth(int width) {
		this.width = width;
	}
	public int getHeight() {
		return height;
	}
	public void setHeight(int height) {
		this.height = height;
	}
	
}
>




9.클래스와 객체의 차이는?
- 클래스 : .class
- 객체: .class를 메모리에 올린것


10.아래의 프로그램을 작성하시오.
-1 부터 num 까지 합을 구하는 class 를 작성하도록 하시오.
 
public class SumMain {

    public static void main(String[] args) {

        GetSum getsum = new GetSum(); //1)객체 생성
         int num; //2)num 변수 선언
         num = 50;

         getsum.setNum(num); //3)getsum 객체의 setNum함수 호출, num값 50 저장
         getsum.sum(); //4)getsum객체의 sum함수 호출, 1-50까지 합 구함

      }

}
>
class GetSum{
	int num;
	public void setNum(int n) {
		num = n;
	}
	public int Sum() {
		int sum=0;
		for(int i = 1; i<=num;i++) {
			sum = sum+i;
		}return sum;
		
	} 
}


public class AreaTest {

	public static void main(String[] args) {
		
		GetSum getsum = new GetSum(); 
        int num; 
        num = 50;

        getsum.setNum(num); 
        getsum.sum(); 
        
		
	}

}

11.아래의 프로그래밍을 작성하시오.
 
Gugudan gugudan = new Gugudan();
gugudan.printGugu(10); //1단부터 10단까지 출력
gugudan.printGugu(20); //1단부터 20단까지 출력

>
class Gugudan{
	public static void printGugu(int dan) {
		for(int i = 1; i<=dan;i++) {
			for(int j =1; j<=10; j++) {	
				System.out.println(i+"x"+j+"="+(i*j));
			}
		}
	}
	
}

public class AreaTest {

	public static void main(String[] args) {
		
		Gugudan gugudan = new Gugudan();
		gugudan.printGugu(10); 
		gugudan.printGugu(20); 
		
		
	}

}