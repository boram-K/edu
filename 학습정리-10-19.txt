1. Stirng 에서 concat 메서드에 대해서 설명하시오.
- concat은 문자열을 합치는 기능을 한다. +연산자와는 다르게 합친 문자열을 String으로 생성해 준다.

2. Stirng 에서 substring 메서드 사용법은?
-subString메소드는 문자열을 추출한다. 
예를들어 String str = "abcdefg"일 때, str.substring(2,4);를 하게 되면 인덱스 2이후부터 4미만까지의 문자열을 추출해서 "cd"라는 문자열을 추출하게 된다.

3. Stirng  compareTo 사용법은?
-compareTo는 두 문자열의 사전적 위치를 비교하는 것으로 String st1="Apple"; String st2="apple"; 일 때,
st1.compareTo(st2);를 하게되면 두 문자열을 빼서 숫자가 음수로 나오면 st1이 사전의 앞에 위치하는 문자이고 양수이면 st2가 사전의 앞에 위치하는 문자가 된다.

4. String.valueOf 에 대하여 설명하시오.
-자료형의 값을 문자열로 바꾼다.
ex) int a = 5;
String ab = String.valueOf(a);
로 바꿀 수 있다.

5. 아래가 실행되는 원리(함수)를 표현해 보세요.
String str = "age" + 17;

-
6.StringBuilder 와 String 의 차이는?
-두 클래스의 가장 큰 차이점은 String이 불변의 속성을 갖는다는 점이다. 그러나 연산이 빈번하게 일어나는 알고리즘에 String을 사용하게 되면 성능에 치명적인 영향을 끼치게 되므로 StringBuilderf라는 가변성을 가지는 클래스를 도입한다. 즉 Srting은 문자열 연산이 적고 멀티 쓰레드 환경일 때, StringBuilder는 문자열 연산이 많고 단일쓰레드일 때 사용해주면 좋다.

7.아래의 메모리 그림을 그리시오. (1차원 배열)
int[] ar1 = new int[5];


8.아래의 메모리 그림을 그리시오. (1차원 배열)
Box[] ar = new Box[5];

9. 아래를 프로그래밍 하시오.
//스캐너쓸것
"Hello.java" 문자열에서 파일명과 확장자인 java를 분리시키는 프로그램을 짜시오.

입력: Hello.java
출력: 파일이름은: Hello 이며 확장자는 java 입니다.

입력: Java.avi
출력: 파일 이름은: Java 이며 확장자는 avi 입니다.
>
import java.util.Scanner;

public class Edu1015 {

	public static void main(String[] args) {
		
		Scanner sc=new Scanner(System.in);

		String str = sc.next();
		String extend = str.substring(str.indexOf(".") + 1);
		String name = str.substring(0, str.indexOf("."));
		System.out.println("입력" + str);
		System.out.println("파일 이름은 " + name + "이며 확장자는 " + extend + "입니다.");
		
	}
}


10.아래를 배열을 활용하여 프로그램을 짜시오.
화폐매수 구하기
- 1원 부터 5000 원 까지 랜덤으로 생성.
- 500원 100 원 50 원 10원은 배열로 선언 하여 저장 

해당 랜덤생성된 화폐 매수를 아래와 같이 출력

2860원 

출력
500원 : 5개 
100원 : 3개 
50원 : 1개 
10원 : 1개

>
public static void main(String[] args) {

		int[] coin = new int[4];
		int m = (int) ((Math.random() * 5000) + 1);

		coin[0] = 500;
		coin[1] = 100;
		coin[2] = 50;
		coin[3] = 10;
		System.out.println("금액: " + m);
		for (int i = 0; i < coin.length; i++) {
			System.out.println(coin[i] + "원 " + m / coin[i] + "개");
			m = m % coin[i];

		}
	}
