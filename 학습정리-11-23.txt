1. 아래를 프로그래밍 하시오.

/context명/input.jsp ->이름 국어 영어 수학 (input box) 센드 버튼, 리셋버튼
/context명/result.jsp ->이름 총점 평균

input.jsp >
<body>
<h3>이름과 국영수의 점수를 입력해주세요</h3>

<form action="result.jsp">
이름: <input type="text" name="name2"><br />
국어: <input type="text" name="kor"><br />
영어: <input type="text" name="eng"><br />
수학: <input type="text" name="math"><br />
<input type="submit"value="전송">
<input type="reset" value="reset">
</form>

</body>

result.jsp>
<title>결과</title>
</head>
<body>
<%String name =request.getParameter("name2");%>
이름 :<%=name  %> <br>
<%
int k = Integer.valueOf(request.getParameter("kor"));
int e = Integer.valueOf(request.getParameter("eng"));
int m = Integer.valueOf(request.getParameter("math"));
%>
<%
int sum= k+e+m;
double avg = sum/3.0;
%>
총점 : <%= sum %><br>
평균 : <%= avg %>

</body>




2. 아래를 jsp 로 구현하시오.
in.jsp>
<body>
	<form action="out.jsp" method="post">
	이름: <input type="text" name="name1"><br>
	아이디: <input type="text" name="id1"><br>
	비밀번호: <input type="password" name="pw"><br>
	취미: <input type="checkbox" name="hobby" value="read">독서
	<input type="checkbox" name="hobby" value="cook">요리
	<input type="checkbox" name="hobby" value="swim">수영
	<input type="checkbox" name="hobby" value="sleep">취침
	<input type="checkbox" name="hobby" value="running">조깅<br>
	전공: <input type="radio" name="mojor" value="kor">국어
	<input type="radio" name="major" value="eng">영어
	<input type="radio" name="mojor" value="math">수학
	<input type="radio" name="major" value="deg">디자인
	<select name="protocol">
			<option value="http">http</option>
			<option value="ftp" selected="selected">ftp</option>
			<option value="smtp">smtp</option>
			<option value="pop">pop</option>
		</select><br/>
		<input type="submit" value="전송">
		<input type="reset" value="reset">
	</form>
</body>

out.jsp>
<body>
<%
String n = request.getParameter("name1");
String id = request.getParameter("id1");
String pw = request.getParameter("pw");
String[] hoobys = request.getParameterValues("hobby");
String major = request.getParameter("major");
String pt = request.getParameter("protocol");


%>
이름: <%= n %><br>
아이디: <%= id %><br>
비밀번호: <%= pw %><br>
취미: <%for(int i=0; i<hoobys.length;i++){%>
<%= hoobys[i] %> 
<% }%>
<br>
전공: <%= major %><br>
protocol: <%= pt %><br>

</body>



3.부트스트랩 Carousel 을 완성 하시오.(boot.html 참고)

>
<!DOCTYPE html>
<html lang="en">
<head>
  <title>Carousel exam</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top">
    <a class="navbar-brand" href="#">Carousel</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
  
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav mr-auto">
        <li class="nav-item active">
          <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Link</a>
        </li>
        </li>
        <li class="nav-item">
          <a class="nav-link disabled">Disabled</a>
        </li>
      </ul>
      <form class="form-inline my-2 my-lg-0">
        <input class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
      </form>
    </div>
  </nav>

  <div id="carouselExampleCaptions" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
      <li data-target="#carouselExampleCaptions" data-slide-to="0" class="active"></li>
      <li data-target="#carouselExampleCaptions" data-slide-to="1"></li>
      <li data-target="#carouselExampleCaptions" data-slide-to="2"></li>
    </ol>
    <div class="carousel-inner">
      <div class="carousel-item active">
        <img src="bg0.jpg" class="d-block w-100" alt="b">
        <div class="carousel-caption d-none d-md-block">
          <h5>First slide label</h5>
          <p>Some representative placeholder content for the first slide.</p>
        </div>
      </div>
      <div class="carousel-item">
        <img src="bg1.jpg" class="d-block w-100" alt="b">
        <div class="carousel-caption d-none d-md-block">
          <h5>Second slide label</h5>
          <p>Some representative placeholder content for the second slide.</p>
        </div>
      </div>
      <div class="carousel-item">
        <img src="bg2.jpg" class="d-block w-100" alt="b">
        <div class="carousel-caption d-none d-md-block">
          <h5>Third slide label</h5>
          <p>Some representative placeholder content for the third slide.</p>
        </div>
      </div>
    </div>
    <button class="carousel-control-prev" type="button" data-target="#carouselExampleInterval" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-target="#carouselExampleInterval" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </button>
  </div>
  <div class="container">
  <div class="row my-5">
    <div class="col-7">
    <h2>First featurette heading... I will be there</h2>
    <p>Quickly build an effective pricing table for your potential customers with this Bootstrap example. It’s built with default Bootstrap components and utilities with little customization.</p>
  </div>
    <div class="col-5">
      <img src="bg0.jpg" alt="b" style="width: 440px; height: 280px;">
    </div>
  </div>
  <hr>
</div>
<div class="container">
  <div class="row my-5">
    <div class="col-5">
      <img src="bg0.jpg" alt="b" style="width: 440px; height: 280px;">
    </div>
    <div class="col-7">
    <h2>First featurette heading... I will be there</h2>
    <p>Quickly build an effective pricing table for your potential customers with this Bootstrap example. It’s built with default Bootstrap components and utilities with little customization.</p>
  </div>  
  </div>
  <hr>
</div>
<div class="container">
  <div class="row my-5">
    <div class="col-7">
    <h2>First featurette heading... I will be there</h2>
    <p>Quickly build an effective pricing table for your potential customers with this Bootstrap example. It’s built with default Bootstrap components and utilities with little customization.</p>
  </div>
    <div class="col-5">
      <img src="bg0.jpg" alt="b" style="width: 440px; height: 280px;">
    </div>
  </div>
  <hr>
</div>
<div class="container">
<p>
  © 2017-2019 Company, Inc. ·
<a href="#">Privacy</a>
·
<a href="#">Terms</a>

</p>

</body>
</html>

3. 다음을 설명하시오.
-액션 태그 와 종류는?
>액션태그란, jsp페이지 내에서 어떤 동작을 하도록 지시하는 태그이다. 페이지이동, 페이지 include 등등이 있다. 종류로는 forward,include,param이 있다.
> forward는  현재 페이지를 다른 페이지로 전환할 때 사용한다. 그러나 클라이언트에게 보여지는 페이지 URL은  response.sendRedirect() 과는 다르게 넘어가는 것이 아닌, 현재 페이지의 URL을 그대로 유지하고 있다.
> param은 forward 액션태그와 param을 이용해서 다른 페이지에 데이터를 전달할 수 있다.
-include는 jsp페이지 내에 다른 페이지를 삽입하는 액션태그이다.

4. redirect , forward 의 차이는?
>redirect는 서버가 클라이언트에게 어떤 URL로 이동하라는 요청을 보내는 것이다. forward는 서블릿이나 jsp가 요청을 받은 후에 그 요청을 처리하다가 추가적인 처리를 같은 웹 어플리케이션 안에 있는 다른 서블릿이나 jsp에 위임하여 처리하는 경우에 쓰인다. 
>차이점은 redirect에서는 요청과 응답이 서로 다르게 각각 이루어졌다는 점이고, forward에서는 요청과 응답이 한번만 이루어졌다는 점이다. 또한 redirect는 처음 요청한 URL과 redirect가 일어난 후의 URL이 다르게 변경된다는 점이다. forward의 경우는 요청 URL로 동작된 후에도 같다.

5. 쿠키의 개념에 대하여 설명하시오.
>웹브라우저에서 서버로 어떤 데이터를 요청하면, 서버측에서는 알맞은 로직을 수행한 후 데이터를 웹브라우저에 응답한다. 그리고, 서버는 웹브라우저와의 관계를 종료한다. 이렇게 웹브라우저에 응답 후 관계를 끊는 것은 http프로토콜의 특징이다. 연결이 끊겼을 때, 어떤 정보를 지속적으로 유지하기 위한 수단으로 '쿠키'라는 방식을 사용한다. 웹에서 요청마다 매번 연결이 해제되어 요청마다 새로운 사용자로 인식되는 단점이 생기는데 쿠키와 세션을 통새 브라우저를 종료했다가 다시 접속해도 로그인 상태를 유지할 수 있다. 즉, 쿠키는 서버를 대신해 웹브라우저에 저장하고 요청 할 때, 그 정보를 서버에 보내 사용자를 식별할 수 있다.

내일 개별진척도는

위의 문제 2. 아래를 jsp 로 구현하시오. 


개별진척도 22 번입니다.
public static void main(String[] args) {
                
                int math, science, english;
                math = 90;
                science = 80; 
                english = 80;

                Grade me = new Grade(math, science, english);
                System.out.println("평균은 " + me.average());
                System.out.println(me.getGrade()); //우 입니다.