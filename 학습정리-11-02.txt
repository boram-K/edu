1. 아래의 결과 값은 false 출력이 된다. true 가 되도록 INum을짜시오.

  INum[] ar1 = new INum[3];
  INum[] ar2 = new INum[3];

  ar1[0] = new INum(1); ar2[0] = new INum(1);
  ar1[1] = new INum(2); ar2[1] = new INum(2);
  ar1[2] = new INum(3); ar2[2] = new INum(3);

  System.out.println(Arrays.equals(ar1, ar2));

>
class INum{
	private int num;
	
	public INum(int num) {
		this.num=num;
	}
	@Override
	public boolean equals(Object obj) {
		INum i = (INum)obj;
		if(this.num==i.num)
			return true;
		return false;
	}
}

2. 아래에서 정렬이 이름 순으로 되게끔 하시오. Person 객체를 만드시오.

class ArrayObjSearch {
	public static void main(String[] args) {

	Person[] ar = new Person[3];
	ar[0] = new Person("Lee1234",29);
	ar[1] = new Person("Goo12",15);
	ar[2] = new Person("Soo3",37);

    Arrays.sort(ar);
	}
}

>
class Person implements Comparable{
	private String name;
	private int age;
	
	public Person(String name,int age) {
		this.age=age;
		this.name=name;
	}
	@Override
	public int compareTo(Object o) {
		Person p = (Person)o;
		return this.name.compareTo(p.name);
	}
	@Override
	public String toString() {		
		return name + ": "+age;
	}
}
>[Goo12: 15, Lee1234: 29, Soo3: 37]
3.위의 문제에서 사람의 이름 글자 수가 많은 순으로 정렬을 되게끔 person 객체를 만드시오.
>class Person implements Comparable{
	private String name;
	private int age;
	public Person(String name,int age) {
		this.name=name;
	}
	@Override
	public int compareTo(Object o) {
		Person p = (Person)o;
		return this.name.length()-p.name.length();
	}
	@Override
	public String toString() {
		
		return name+": "+age;
	}
}

4.아래의 문자열을 ":" 구분자로 하여, PM 08 45 를 차례로 출력하는 프로그램을 작성 하시오.
"PM:08:45"
>
public static void main(String[] args) {
StringTokenizer st1 = new StringTokenizer("PM:08:45", ":");
		
while(st1.hasMoreTokens())
System.out.print(st1.nextToken()+' ');
}		

5. 아래를 넓이 순서대로 출력하게끔 하시오.
Rectangle[] recArr = {new Rectangle(6, 6),new Rectangle(5, 5),new Rectangle(10, 10),new Rectangle(12, 12),new Rectangle(11, 11)};
      

	      Arrays.sort(recArr);      
	    
	      
	      for ( Rectangle rec: recArr) {
	         System.out.println(rec.getArea());
	      }

>
class Rectangle implements Comparable{
	private int width,height;
	
	public Rectangle(int w,int h) {
		this.height=h;
		this.width=w;
	}

	@Override
	public int compareTo(Object o) {
		Rectangle r = (Rectangle)o;
		return this.getArea()-r.getArea();
	}
	public  int getArea() {
		return height*width;
	}	
}

6. html 에서
아래의 태그를 설명하시오.
-<br> :행바꿈태그. break라는의미이다.<br/></br>로 쓰이지만 <br>만 써도 상관없다.

-<li>:list item의 약자이다. <ul>과 <oi>태그 안에서 쓰인다.

-<ol>: ordered list의 약자이다. 순서가 있는 목록을 만드는데 사용된다. 이것을 사용할 때<ol type="i"> 을 붙이게 되면 로마자로 순서가 매겨지며,<ol start="숫자">이것을 사용하게 되면 숫자부터 순서대로 번호가 매겨지게 된다.
ex)
<p>리스트</p>
<ol type="i">
    <li>사과</li>
    <li>딸기</li>
    <li>배</li>
    <li>수박</li>
</ol>
<ol start="7">
    <li>사과</li>
    <li>딸기</li>
    <li>배</li>
    <li>수박</li>
</ol>

-<ul>:unordered list의 약자이다. 순서가 필요없는 리스트를 만드는데 쓰인다.

